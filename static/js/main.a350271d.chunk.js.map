{"version":3,"sources":["uploadImage.png","ChangingProgressProvider.js","App.js","index.js"],"names":["myVar","ChangingProgressProvider","state","valuesIndex","setInterval","setState","props","values","length","this","clearInterval","Alert","severity","children","React","Component","App","useState","selectedFile","setSelectedFile","cardState","setCardState","disableButton","setDisableButton","classes","uploadStyle","height","width","heading","marginTop","fontWeight","cardStyle","display","padding","button","loader","fontSize","bytesToSize","bytes","i","parseInt","Math","floor","log","round","pow","ShowMessage","type","message","Success","ShowContent","Paper","elevation","variant","Typography","align","name","size","Container","Grid","container","spacing","direction","alignItems","justify","style","minHeight","item","xs","sm","Card","CardContent","src","uploadImage","alt","fileData","percentage","value","text","CardActions","Button","component","fullWidth","disabled","hidden","onChange","event","preventDefault","target","files","color","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a350271d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/uploadImage.309cb19c.png\";","import React from \"react\";\r\nimport { Alert } from '@material-ui/lab';\r\nvar myVar=null;\r\nclass ChangingProgressProvider extends React.Component {\r\n  state = {\r\n    valuesIndex: 0\r\n  };\r\n\r\n  componentDidMount() {\r\n    myVar = setInterval(() => {\r\n      this.setState({\r\n        valuesIndex: (this.state.valuesIndex + 1) % this.props.values.length\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    if(this.state.valuesIndex===6){\r\n      clearInterval(myVar);\r\n      return <Alert severity=\"success\">File Uploaded Successfully !</Alert>\r\n    }\r\n    return this.props.children(this.props.values[this.state.valuesIndex]);\r\n  }\r\n}\r\n\r\nexport default ChangingProgressProvider;\r\n","import React, { useState } from 'react'\r\nimport { Container, Grid, Card, CardContent, CardActions, Button, Typography, Paper, } from '@material-ui/core';\r\nimport uploadImage from './uploadImage.png';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { CircularProgressbar} from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport ChangingProgressProvider from './ChangingProgressProvider'; \r\nconst App = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [cardState, setCardState] = useState('uploadImage');\r\n    const [disableButton, setDisableButton] = useState(false);\r\n\r\n    const classes = {\r\n        uploadStyle: {\r\n            height: 250,\r\n            width: 400\r\n        },\r\n        heading: {\r\n            marginTop: '20px',\r\n            fontWeight: 'bold'\r\n        },\r\n        cardStyle: {\r\n            display: 'block',\r\n            width: '100%',\r\n            padding:'20px'\r\n        },\r\n        button: {\r\n            marginTop: '10px'\r\n        },\r\n        loader: {\r\n            fontSize: '10px'\r\n        }\r\n    }\r\n\r\n    function bytesToSize(bytes) {\r\n        var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        if (bytes === 0) return '0 Byte';\r\n        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n        return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n    }\r\n\r\n    const renderElement = () => {\r\n        if (cardState === 'uploadImage') {\r\n            return <img src={uploadImage} alt=\"upload\" style={classes.uploadStyle} />\r\n        }\r\n        else if (cardState === 'showContent') {\r\n            return <ShowContent fileData={selectedFile} />\r\n        }\r\n        else if (cardState === 'loader') {\r\n            return (\r\n                <>\r\n                    {\r\n\r\n                        <ChangingProgressProvider values={[0, 20, 40, 60, 80, 100, 101]} >\r\n                            {percentage => (\r\n                                percentage === 101 ? setCardState('success') : <CircularProgressbar\r\n                                    value={percentage} text={`${percentage}%`} />\r\n                            )}\r\n                        </ChangingProgressProvider>\r\n                    }\r\n                </>\r\n            )\r\n        }\r\n        else if (cardState === 'success') {\r\n            return <Success />\r\n        }\r\n        else if (cardState === 'Error') {\r\n            return <ShowMessage type=\"error\" message=\"Please Select a file first.\" />\r\n        }\r\n    }\r\n\r\n    function ShowMessage({ type, message }) {\r\n        return <Alert severity={\"\" + type}>{message}</Alert>\r\n    }\r\n    function Success() {\r\n        return (\r\n            <>\r\n                <ShowMessage type=\"success\" message=\"File Uploaded Successfully !\" />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const ShowContent = () => {\r\n        return (\r\n            <>\r\n                <Paper elevation={3} variant=\"outlined\">\r\n                    <Typography variant=\"h3\" align=\"center\">Selected File</Typography>\r\n\r\n                    <Typography variant=\"h6\" align=\"center\">File Name</Typography>\r\n                    <Typography variant=\"body2\" align=\"center\">{selectedFile.name}</Typography>\r\n\r\n                    <Typography variant=\"h6\" align=\"center\">File Size</Typography>\r\n                    <Typography variant=\"body2\" align=\"center\">{bytesToSize(selectedFile.size)}</Typography>\r\n\r\n                    <Typography variant=\"h6\" align=\"center\">File Type</Typography>\r\n                    <Typography variant=\"body2\" align=\"center\">{selectedFile.type}</Typography>\r\n                </Paper>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const onFileUpload = () => {\r\n        setDisableButton(true);\r\n        if (!selectedFile)\r\n            setCardState('Error');\r\n        else\r\n            setCardState('loader');\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        event.preventDefault();\r\n        setSelectedFile(event.target.files[0]);\r\n        setCardState('showContent');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Grid\r\n                    container\r\n                    spacing={0}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    justify=\"center\"\r\n                    style={{ minHeight: '100vh' }}\r\n                >\r\n                    <Grid item xs={11} sm={8}>\r\n                        <Card style={classes.cardStyle}>\r\n                            <Typography align=\"center\" variant=\"h4\" style={classes.heading}>Upload Your Document</Typography>\r\n                            <CardContent>\r\n                                {\r\n                                    renderElement()\r\n                                }\r\n                                <CardActions>\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        component=\"label\"\r\n                                        fullWidth\r\n                                        disabled={disableButton}\r\n                                        size=\"large\"\r\n                                        style={classes.button}\r\n                                    >\r\n                                        Upload File\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            hidden\r\n                                            onChange={onFileChange}\r\n                                        />\r\n                                    </Button>\r\n                                </CardActions>\r\n                                <CardActions>\r\n                                    <Button variant=\"contained\" color=\"primary\" size=\"large\" style={classes.button} fullWidth onClick={onFileUpload}>\r\n                                        Submit\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'; \r\nimport './index.css';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}